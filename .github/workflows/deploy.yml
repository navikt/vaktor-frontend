name: Build, push, and deploy

on: [push]

env:
  docker_image: ghcr.io/navikt/${{ github.repository }}:${{ github.sha }}
  SENTRY_CLI_VERSION: 2.2.0
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_TOKEN }}
  SENTRY_ORG: 'nav'  
  SENTRY_PROJECT: 'vaktor'
  SENTRY_URL : 'https://sentry.gc.nav.no'

permissions:
  actions: read
  contents: read
  id-token: write
  packages: write
  security-events: write

jobs:
  build-and-run-tests:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Authenticate with private NPM package
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
        
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login ghcr.io --username ${GITHUB_REPOSITORY} --password-stdin
          docker build --tag ${docker_image} --build-arg NPM_TOKEN=${{ secrets.NPM_TOKEN }} .
          docker push ${docker_image}
  
  # sentry-bump-version-release:
  #   name: Sentry Create and Finalize Release
  #   runs-on: ubuntu-latest
  #   steps:

  #     - uses: actions/checkout@v2
    
  #     - name: Install Sentry CLI
  #       run: |
  #         curl -sL https://sentry.io/get-cli/ | SENTRY_CLI_VERSION="${SENTRY_CLI_VERSION}" bash

  #     - name: Create and Finalize Release
  #       run: |
  #         VERSION="${GITHUB_SHA}"  # Use the commit hash as the release name
  #         sentry-cli releases new "$VERSION"
  #         sentry-cli releases set-commits "$VERSION" --auto
  #         sentry-cli releases finalize "$VERSION"

  deploy-test:
    name: Deploy application to test env
    needs: build-and-run-tests
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-test.yml
          VAR: image=${{ env.docker_image }}
          VARS: .nais/dev.yml
  deploy-prod:
    name: Deploy application to prod
    needs: build-and-run-tests
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yml
          VAR: image=${{ env.docker_image }}
          VARS: .nais/prod.yml
